<body class="h-100 gradient-form" style="background-color: black;">
  <div class="container py-5 h-100">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="card rounded-9 text-black">
        <div class="row">
          <div class="col-lg-12" style="background-color: rgb(84, 84, 84); padding: 20px;">

          <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
          
          <div class="text-center mb-5">
            <h2 class="mb-4">Friends</h2>
          </div>
          
          <div class="mb-4">
            <h4>Add a Friend</h4>
            <form id="add-friend-form">
              <div class="input-group mb-3">
                <input type="text" id="friend-username" class="form-control" placeholder="Enter friend's username" required>
                <button class="btn btn-dark border border-warning" type="submit">Add Friend</button>
              </div>
            </form>
          </div>

          
          <div class="mb-5">
            <h4>Incoming Friend Requests</h4>
            <div id="incoming-friend-requests">
              <ul class="list-group">
                {{#each pending}}
                  <li class="list-group-item d-flex justify-content-between align-items-center">
                    <a href="/profile?username={{this.username}}" class="text-decoration-none">{{this.username}}</a>
                    <div>
                      <button class="btn btn-success btn-sm" data-username="{{this.username}}" data-action="approve">Approve</button>
                      <button class="btn btn-danger btn-sm" data-username="{{this.username}}" data-action="decline">Decline</button>
                    </div>
                  </li>
                {{else}}
                  <div class="alert alert-info" role="alert">
                    No pending friend requests.
                  </div>
                {{/each}}
              </ul>
            </div>
          </div>

          <div class="mb-5">
            <h4>Sent Friend Requests</h4>
            <div id="sent-friend-requests">
              <ul class="list-group">
                {{#each sent}}
                  <li class="list-group-item d-flex justify-content-between align-items-center">
                    <a href="/profile?username={{this.username}}" class="text-decoration-none">{{this.username}}</a>
                    <div>
                      <button class="btn btn-danger btn-sm" data-username="{{this.username}}" data-action="cancel">Cancel</button>
                    </div>
                  </li>
                {{else}}
                  <div class="alert alert-info" role="alert">
                    No pending friend requests.
                  </div>
                {{/each}}
              </ul>
            </div>
          </div>

        
          <h4>Friends</h4>
          <div id="friends-list">
            <ul class="list-group">
              {{#each friends}}
                <li class="list-group-item d-flex justify-content-between align-items-center">
                  <a href="/profile?username={{this.username}}" class="text-decoration-none">{{this.username}}</a>
                  <button class="btn btn-danger btn-sm" data-username="{{this.username}}" data-action="remove">Remove</button>
                </li>
                {{else}}
                  <div class="alert alert-info" role="alert">
                    No friends.
                  </div>
              {{/each}}
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const incomingFriendRequestsContainer = document.getElementById("incoming-friend-requests");
      const sentFriendRequestsContainer = document.getElementById("sent-friend-requests");
      const friendsContainer = document.getElementById("friends-list");
      const addFriendForm = document.getElementById("add-friend-form");

      incomingFriendRequestsContainer.addEventListener("click", async (event) => {
        const button = event.target;

        if (button.tagName === "BUTTON" && button.dataset.action) {
          const username = button.dataset.username;
          const action = button.dataset.action;

          try {
            const response = await fetch(`/friend-request/${action}`, {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ username }),
            });

            if (response.ok) {
              location.reload();
            } else {
              console.error(`Failed to ${action} friend request.`);
            }
          } catch (error) {
            console.error("Error processing friend request:", error);
          }
        }
      });

      // Handle sent friend requests (cancel)
      sentFriendRequestsContainer.addEventListener("click", async (event) => {
        const button = event.target;

        if (button.tagName === "BUTTON" && button.dataset.action === "cancel") {
          const username = button.dataset.username;

          try {
            const response = await fetch(`/friend-request/cancel`, {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ username }),
            });

            if (response.ok) {
              location.reload();
            } else {
              console.error("Failed to cancel friend request.");
            }
          } catch (error) {
            console.error("Error processing cancel request:", error);
          }
        }
      });

      friendsContainer.addEventListener("click", async (event) => {
        const button = event.target;

        if (button.tagName === "BUTTON" && button.dataset.action) {
          const username = button.dataset.username;
          const action = button.dataset.action;

          try {
            const response = await fetch(`/friend-request/${action}`, {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ username }),
            });

            if (response.ok) {
              location.reload();
            } else {
              console.error(`Failed to ${action} friend`);
            }
          } catch (error) {
            console.error("Error removing friend:", error);
          }
        }
      });

      addFriendForm.addEventListener("submit", async (event) => {
        event.preventDefault();

        const username = document.getElementById("friend-username").value;

        try {
          const response = await fetch(`/friend-request/send`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ username }),
          });

          if (response.ok) {
            location.reload();
          } else {
            console.error("Failed to send friend request.");
          }
        } catch (error) {
          console.error("Error sending friend request:", error);
        }
      });
    });
  </script>
</body>

