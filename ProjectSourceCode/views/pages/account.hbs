<body class="h-100 gradient-form" style="background-color: black;">
  <div class="container py-5 h-100">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="card rounded-9 text-black">
        <div class="row">
          <div class="col-lg-12" style="background-color: rgb(84, 84, 84); padding: 20px;">
            <div class="text-center mb-5">
              <h2 class="mb-4">My Account</h2>
            </div>
            <div class="mb-4">
              <h4>Account Information</h4>
              <ul class="list-group">
                <li class="list-group-item">Username: {{userData.username}}</li>
                <li class="list-group-item">Email: {{userData.email}}</li>
              </ul>
            </div>

            <div class="mb-5">
              <h4>Workouts</h4>
              <table class="table table-dark table-striped">
                <thead>
                  <tr>
                    {{!-- add table headings here --}}
                  </tr>
                </thead>
                <ul id="workouts" class="list-group">
                    {{#each workout}}
                      <div class="list-group-item d-flex justify-content-between" id="list-tab" role="tablist">
                          {{this.workout_name}}, {{this.duration}}, {{formatDate this.workout_date}}
                          <button class="btn btn-danger btn-sm" data-workout-id="{{this.workout_id}}" data-action="remove">Remove</button>
                      </div>
                      
                    {{else}}
                      <tr>
                        <td colspan="4" class="text-center">No workouts. (－.－)...zzz</td>
                      </tr>
                    {{/each}}
                </ul>
              </table>
            </div>

            <h4>Friends</h4>
            <table class="table table-dark table-striped">
                <thead>
                  <tr>
                    {{!-- add table headings here --}}
                  </tr>
                </thead>
                <ul id="friends" class="list-group">
                    {{#each friends}}
                      <li class="list-group-item d-flex justify-content-between align-items-center">
                        <a href="/profile?username={{this.username}}" class="text-decoration-none">{{this.username}}</a>
                        <button class="btn btn-danger btn-sm" data-username="{{this.username}}" data-action="remove">Remove</button>
                      </li>
                      
                    {{else}}
                      <tr>
                        <td colspan="4" class="text-center">No friends. (×﹏×)</td>
                      </tr>
                    {{/each}}
                </ul>
              </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</body>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Handle "Remove Friend" button
    const friendsContainer = document.getElementById("friends");
    friendsContainer.addEventListener("click", async (event) => {
      const button = event.target;

      if (button.tagName === "BUTTON" && button.dataset.action) {
        const username = button.dataset.username;
        const action = button.dataset.action;

        try {
          const response = await fetch(`/friend-request/${action}`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ username }),
          });
          if (response.ok) {
            location.reload();
          } else {
            console.error(`Failed to ${action} friend`);
          }
        } catch (error) {
          console.error("Error removing friend:", error);
        }
      }
    });

    const workoutTable = document.getElementById("workouts");
if (!workoutTable) {
  console.error("Error: Workout table element not found in DOM.");
}

workoutTable?.addEventListener("click", async (event) => {
  const button = event.target;

  // Validate the clicked element
  if (button.tagName === "BUTTON" && button.dataset.action === "remove") {
    const workoutId = button.dataset.workoutId; // Fetch the ID from the button

    // Ensure exerciseId exists
    if (!workoutId) {
      console.error("Error: Missing workoutId in button's dataset.");
      return;
    }

    console.log(`Attempting to remove workout with ID: ${workoutId}`);

    try {
      const response = await fetch(`/remove-workout`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ id: workoutId }),
      });

      // Log additional response information for debugging
      if (!response.ok) {
        console.error(
          `Failed to remove workout. Status: ${response.status}, StatusText: ${response.statusText}`
        );
        const errorText = await response.text();
        console.error(`Error response from server: ${errorText}`);
      } else {
        console.log(`Workout ${workoutId} removed successfully.`);
        location.reload();
      }
    } catch (error) {
      console.error("Error occurred during fetch request:", error);
    }
  } else {
    // Log if the click is not on the expected button
    console.warn("Click event not on a valid remove button.");
  }
});



  });
</script>

